// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package pay_service

import (
	"context"

	"github.com/kysion/base-library/base_model"
	model "github.com/kysion/pay-share-library/pay_model"
	enum "github.com/kysion/pay-share-library/pay_model/pay_enum"
	hook "github.com/kysion/pay-share-library/pay_model/pay_hook"
)

type (
	IOrder interface {
		InstallHook(actionType enum.OrderStateType, hookFunc hook.OrderHookFunc)
		CreateOrder(ctx context.Context, info *model.Order) (*model.OrderRes, error)
		GetOrderById(ctx context.Context, id int64) (*model.OrderRes, error)
		GetOrderByPlatformOrderId(ctx context.Context, id string) (*model.OrderRes, error)
		QueryOrderList(ctx context.Context, info *base_model.SearchParams) (*model.OrderListRes, error)
		QueryOrderByOneMonth(ctx context.Context) (*model.OrderListRes, error)
		QueryOrderByTwoMonth(ctx context.Context) (*model.OrderListRes, error)
		AuditOrderRefund(ctx context.Context, info *model.AuditOrder) (bool, error)
		UpdateOrderTradeSource(ctx context.Context, info *model.UpdateOrderTradeInfo) (bool, error)
		UpdateOrderState(ctx context.Context, id int64, state int) (bool, error)
		GetOrderByProductNumber(ctx context.Context, number string) (*model.OrderListRes, error)
		GetOrderByUnionMainId(ctx context.Context, id int64) (*model.OrderListRes, error)
		GetOrderByConsumerId(ctx context.Context, id string) (*model.OrderListRes, error)
	}
)

var (
	localOrder IOrder
)

func Order() IOrder {
	if localOrder == nil {
		panic("implement not found for interface IOrder, forgot register?")
	}
	return localOrder
}

func RegisterOrder(i IOrder) {
	localOrder = i
}
